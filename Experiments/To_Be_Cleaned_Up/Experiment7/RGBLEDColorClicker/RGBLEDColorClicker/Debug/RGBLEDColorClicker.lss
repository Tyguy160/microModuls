
RGBLEDColorClicker.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009ec  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000000c  00800100  00800100  00000a60  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  00000a60  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000058  00000000  00000000  00000a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000396  00000000  00000000  00000ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000168  00000000  00000000  00000e7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000221  00000000  00000000  00000fe6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000094  00000000  00000000  00001208  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000002bc  00000000  00000000  0000129c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000e7  00000000  00000000  00001558  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  0000163f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
   4:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   8:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  10:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  14:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  18:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  1c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  20:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  24:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  28:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  2c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  30:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  34:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  38:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  3c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  40:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  44:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  48:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  4c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  50:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  54:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  58:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  5c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  60:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  64:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  68:	07 63       	ori	r16, 0x37	; 55
  6a:	42 36       	cpi	r20, 0x62	; 98
  6c:	b7 9b       	sbis	0x16, 7	; 22
  6e:	d8 a7       	std	Y+40, r29	; 0x28
  70:	1a 39       	cpi	r17, 0x9A	; 154
  72:	68 56       	subi	r22, 0x68	; 104
  74:	18 ae       	std	Y+56, r1	; 0x38
  76:	ba ab       	std	Y+50, r27	; 0x32
  78:	55 8c       	ldd	r5, Z+29	; 0x1d
  7a:	1d 3c       	cpi	r17, 0xCD	; 205
  7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
  7e:	57 63       	ori	r21, 0x37	; 55
  80:	bd 6d       	ori	r27, 0xDD	; 221
  82:	ed fd       	.word	0xfded	; ????
  84:	75 3e       	cpi	r23, 0xE5	; 229
  86:	f6 17       	cp	r31, r22
  88:	72 31       	cpi	r23, 0x12	; 18
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	08 00       	.word	0x0008	; ????
  92:	00 00       	nop
  94:	be 92       	st	-X, r11
  96:	24 49       	sbci	r18, 0x94	; 148
  98:	12 3e       	cpi	r17, 0xE2	; 226
  9a:	ab aa       	std	Y+51, r10	; 0x33
  9c:	aa 2a       	or	r10, r26
  9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
  a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
  a2:	4c 3e       	cpi	r20, 0xEC	; 236
  a4:	00 00       	nop
  a6:	00 80       	ld	r0, Z
  a8:	be ab       	std	Y+54, r27	; 0x36
  aa:	aa aa       	std	Y+50, r10	; 0x32
  ac:	aa 3e       	cpi	r26, 0xEA	; 234
  ae:	00 00       	nop
  b0:	00 00       	nop
  b2:	bf 00       	.word	0x00bf	; ????
  b4:	00 00       	nop
  b6:	80 3f       	cpi	r24, 0xF0	; 240
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	00 08       	sbc	r0, r0
  be:	41 78       	andi	r20, 0x81	; 129
  c0:	d3 bb       	out	0x13, r29	; 19
  c2:	43 87       	std	Z+11, r20	; 0x0b
  c4:	d1 13       	cpse	r29, r17
  c6:	3d 19       	sub	r19, r13
  c8:	0e 3c       	cpi	r16, 0xCE	; 206
  ca:	c3 bd       	out	0x23, r28	; 35
  cc:	42 82       	std	Z+2, r4	; 0x02
  ce:	ad 2b       	or	r26, r29
  d0:	3e 68       	ori	r19, 0x8E	; 142
  d2:	ec 82       	std	Y+4, r14	; 0x04
  d4:	76 be       	out	0x36, r7	; 54
  d6:	d9 8f       	std	Y+25, r29	; 0x19
  d8:	e1 a9       	ldd	r30, Z+49	; 0x31
  da:	3e 4c       	sbci	r19, 0xCE	; 206
  dc:	80 ef       	ldi	r24, 0xF0	; 240
  de:	ff be       	out	0x3f, r15	; 63
  e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <__mulsf3_pse+0x92>
  e2:	ff 7f       	andi	r31, 0xFF	; 255
  e4:	3f 00       	.word	0x003f	; ????
  e6:	00 00       	nop
	...

000000ea <__ctors_end>:
  ea:	11 24       	eor	r1, r1
  ec:	1f be       	out	0x3f, r1	; 63
  ee:	cf ef       	ldi	r28, 0xFF	; 255
  f0:	d8 e0       	ldi	r29, 0x08	; 8
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_clear_bss>:
  f6:	21 e0       	ldi	r18, 0x01	; 1
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b1 e0       	ldi	r27, 0x01	; 1
  fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
  fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
 100:	ac 30       	cpi	r26, 0x0C	; 12
 102:	b2 07       	cpc	r27, r18
 104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
 106:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <main>
 10a:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <_exit>

0000010e <__bad_interrupt>:
 10e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000112 <initTimers>:
#include <avr/io.h>
#include <util/delay.h>

void initTimers() {
	// Timer 1 A,B
	TCCR1A |= (1 << WGM10);
 112:	e0 e8       	ldi	r30, 0x80	; 128
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	81 60       	ori	r24, 0x01	; 1
 11a:	80 83       	st	Z, r24
	TCCR1A |= (1 << COM1A1);
 11c:	80 81       	ld	r24, Z
 11e:	80 68       	ori	r24, 0x80	; 128
 120:	80 83       	st	Z, r24
	TCCR1A |= (1 << COM1B1);
 122:	80 81       	ld	r24, Z
 124:	80 62       	ori	r24, 0x20	; 32
 126:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM11);
 128:	e1 e8       	ldi	r30, 0x81	; 129
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	82 60       	ori	r24, 0x02	; 2
 130:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS11);
 132:	80 81       	ld	r24, Z
 134:	82 60       	ori	r24, 0x02	; 2
 136:	80 83       	st	Z, r24
	
	// Timer 2
	TCCR2A |= (1 << WGM20);
 138:	e0 eb       	ldi	r30, 0xB0	; 176
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	81 60       	ori	r24, 0x01	; 1
 140:	80 83       	st	Z, r24
	//TCCR2A |= (1 << WGM21);
	TCCR2B |= (1 << CS21);
 142:	a1 eb       	ldi	r26, 0xB1	; 177
 144:	b0 e0       	ldi	r27, 0x00	; 0
 146:	8c 91       	ld	r24, X
 148:	82 60       	ori	r24, 0x02	; 2
 14a:	8c 93       	st	X, r24
	TCCR2A |= (1 << COM2A1);
 14c:	80 81       	ld	r24, Z
 14e:	80 68       	ori	r24, 0x80	; 128
 150:	80 83       	st	Z, r24
 152:	08 95       	ret

00000154 <checkRedButton>:
}

int checkRedButton() {
	
	// If button is pressed, debounce, then change LEDs
	if (RedButtonPressed()) {
 154:	30 9b       	sbis	0x06, 0	; 6
 156:	24 c0       	rjmp	.+72     	; 0x1a0 <checkRedButton+0x4c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 158:	83 ec       	ldi	r24, 0xC3	; 195
 15a:	99 e0       	ldi	r25, 0x09	; 9
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	f1 f7       	brne	.-4      	; 0x15c <checkRedButton+0x8>
 160:	00 c0       	rjmp	.+0      	; 0x162 <checkRedButton+0xe>
 162:	00 00       	nop
		
		// Debounce the button with a time delay (microseconds)
		_delay_us(DEBOUNCE_TIME);
		
		// Check for bouncing
		if (redButtonWasPressed == 0) {
 164:	80 91 08 01 	lds	r24, 0x0108
 168:	90 91 09 01 	lds	r25, 0x0109
 16c:	89 2b       	or	r24, r25
 16e:	e1 f4       	brne	.+56     	; 0x1a8 <checkRedButton+0x54>
			
			// Set flag for button press
			redButtonWasPressed = 1;
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	90 93 09 01 	sts	0x0109, r25
 178:	80 93 08 01 	sts	0x0108, r24
			
			// Increment button press count
			redButtonPressCount++;
 17c:	80 91 0a 01 	lds	r24, 0x010A
 180:	90 91 0b 01 	lds	r25, 0x010B
 184:	01 96       	adiw	r24, 0x01	; 1
			
			// Reset the button press count
			if (redButtonPressCount == MAX_COUNT) {
 186:	88 30       	cpi	r24, 0x08	; 8
 188:	91 05       	cpc	r25, r1
 18a:	29 f0       	breq	.+10     	; 0x196 <checkRedButton+0x42>
			
			// Set flag for button press
			redButtonWasPressed = 1;
			
			// Increment button press count
			redButtonPressCount++;
 18c:	90 93 0b 01 	sts	0x010B, r25
 190:	80 93 0a 01 	sts	0x010A, r24
 194:	09 c0       	rjmp	.+18     	; 0x1a8 <checkRedButton+0x54>
			
			// Reset the button press count
			if (redButtonPressCount == MAX_COUNT) {
				redButtonPressCount = 0;
 196:	10 92 0b 01 	sts	0x010B, r1
 19a:	10 92 0a 01 	sts	0x010A, r1
 19e:	04 c0       	rjmp	.+8      	; 0x1a8 <checkRedButton+0x54>
			}
		}		
	}
	// Clear flag for button press
	else {
		redButtonWasPressed = 0;
 1a0:	10 92 09 01 	sts	0x0109, r1
 1a4:	10 92 08 01 	sts	0x0108, r1
	}
	
	return (pow(2, redButtonPressCount) - 2);
 1a8:	60 91 0a 01 	lds	r22, 0x010A
 1ac:	70 91 0b 01 	lds	r23, 0x010B
 1b0:	88 27       	eor	r24, r24
 1b2:	77 fd       	sbrc	r23, 7
 1b4:	80 95       	com	r24
 1b6:	98 2f       	mov	r25, r24
 1b8:	0e 94 38 02 	call	0x470	; 0x470 <__floatsisf>
 1bc:	9b 01       	movw	r18, r22
 1be:	ac 01       	movw	r20, r24
 1c0:	60 e0       	ldi	r22, 0x00	; 0
 1c2:	70 e0       	ldi	r23, 0x00	; 0
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	90 e4       	ldi	r25, 0x40	; 64
 1c8:	0e 94 c4 02 	call	0x588	; 0x588 <pow>
 1cc:	20 e0       	ldi	r18, 0x00	; 0
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	40 e0       	ldi	r20, 0x00	; 0
 1d2:	50 e4       	ldi	r21, 0x40	; 64
 1d4:	0e 94 a0 01 	call	0x340	; 0x340 <__subsf3>
 1d8:	0e 94 05 02 	call	0x40a	; 0x40a <__fixsfsi>
}
 1dc:	cb 01       	movw	r24, r22
 1de:	08 95       	ret

000001e0 <checkGreenButton>:

int checkGreenButton() {
	
	// If button is pressed, debounce, then change LEDs
	if (GreenButtonPressed()) {
 1e0:	31 9b       	sbis	0x06, 1	; 6
 1e2:	24 c0       	rjmp	.+72     	; 0x22c <checkGreenButton+0x4c>
 1e4:	83 ec       	ldi	r24, 0xC3	; 195
 1e6:	99 e0       	ldi	r25, 0x09	; 9
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <checkGreenButton+0x8>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <checkGreenButton+0xe>
 1ee:	00 00       	nop
		
		// Debounce the button with a time delay (microseconds)
		_delay_us(DEBOUNCE_TIME);
		
		// Check for bouncing
		if (greenButtonWasPressed == 0) {
 1f0:	80 91 04 01 	lds	r24, 0x0104
 1f4:	90 91 05 01 	lds	r25, 0x0105
 1f8:	89 2b       	or	r24, r25
 1fa:	e1 f4       	brne	.+56     	; 0x234 <checkGreenButton+0x54>
			
			// Set flag for button press
			greenButtonWasPressed = 1;
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	90 93 05 01 	sts	0x0105, r25
 204:	80 93 04 01 	sts	0x0104, r24
			
			// Increment button press count
			greenButtonPressCount++;
 208:	80 91 06 01 	lds	r24, 0x0106
 20c:	90 91 07 01 	lds	r25, 0x0107
 210:	01 96       	adiw	r24, 0x01	; 1
			
			// Reset the button press count
			if (greenButtonPressCount == MAX_COUNT) {
 212:	88 30       	cpi	r24, 0x08	; 8
 214:	91 05       	cpc	r25, r1
 216:	29 f0       	breq	.+10     	; 0x222 <checkGreenButton+0x42>
			
			// Set flag for button press
			greenButtonWasPressed = 1;
			
			// Increment button press count
			greenButtonPressCount++;
 218:	90 93 07 01 	sts	0x0107, r25
 21c:	80 93 06 01 	sts	0x0106, r24
 220:	09 c0       	rjmp	.+18     	; 0x234 <checkGreenButton+0x54>
			
			// Reset the button press count
			if (greenButtonPressCount == MAX_COUNT) {
				greenButtonPressCount = 0;
 222:	10 92 07 01 	sts	0x0107, r1
 226:	10 92 06 01 	sts	0x0106, r1
 22a:	04 c0       	rjmp	.+8      	; 0x234 <checkGreenButton+0x54>
			}
		}
	}
	// Clear flag for button press
	else {
		greenButtonWasPressed = 0;
 22c:	10 92 05 01 	sts	0x0105, r1
 230:	10 92 04 01 	sts	0x0104, r1
	}
	
	return (pow(2, greenButtonPressCount) - 2);
 234:	60 91 06 01 	lds	r22, 0x0106
 238:	70 91 07 01 	lds	r23, 0x0107
 23c:	88 27       	eor	r24, r24
 23e:	77 fd       	sbrc	r23, 7
 240:	80 95       	com	r24
 242:	98 2f       	mov	r25, r24
 244:	0e 94 38 02 	call	0x470	; 0x470 <__floatsisf>
 248:	9b 01       	movw	r18, r22
 24a:	ac 01       	movw	r20, r24
 24c:	60 e0       	ldi	r22, 0x00	; 0
 24e:	70 e0       	ldi	r23, 0x00	; 0
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	90 e4       	ldi	r25, 0x40	; 64
 254:	0e 94 c4 02 	call	0x588	; 0x588 <pow>
 258:	20 e0       	ldi	r18, 0x00	; 0
 25a:	30 e0       	ldi	r19, 0x00	; 0
 25c:	40 e0       	ldi	r20, 0x00	; 0
 25e:	50 e4       	ldi	r21, 0x40	; 64
 260:	0e 94 a0 01 	call	0x340	; 0x340 <__subsf3>
 264:	0e 94 05 02 	call	0x40a	; 0x40a <__fixsfsi>
}
 268:	cb 01       	movw	r24, r22
 26a:	08 95       	ret

0000026c <checkBlueButton>:

int checkBlueButton() {
	
	// If button is pressed, debounce, then change LEDs
	if (BlueButtonPressed()) {
 26c:	32 9b       	sbis	0x06, 2	; 6
 26e:	24 c0       	rjmp	.+72     	; 0x2b8 <checkBlueButton+0x4c>
 270:	83 ec       	ldi	r24, 0xC3	; 195
 272:	99 e0       	ldi	r25, 0x09	; 9
 274:	01 97       	sbiw	r24, 0x01	; 1
 276:	f1 f7       	brne	.-4      	; 0x274 <checkBlueButton+0x8>
 278:	00 c0       	rjmp	.+0      	; 0x27a <checkBlueButton+0xe>
 27a:	00 00       	nop
		
		// Debounce the button with a time delay (microseconds)
		_delay_us(DEBOUNCE_TIME);
		
		// Check for bouncing
		if (blueButtonWasPressed == 0) {
 27c:	80 91 00 01 	lds	r24, 0x0100
 280:	90 91 01 01 	lds	r25, 0x0101
 284:	89 2b       	or	r24, r25
 286:	e1 f4       	brne	.+56     	; 0x2c0 <checkBlueButton+0x54>
			
			// Set flag for button press
			blueButtonWasPressed = 1;
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	90 93 01 01 	sts	0x0101, r25
 290:	80 93 00 01 	sts	0x0100, r24
			
			// Increment button press count
			blueButtonPressCount++;
 294:	80 91 02 01 	lds	r24, 0x0102
 298:	90 91 03 01 	lds	r25, 0x0103
 29c:	01 96       	adiw	r24, 0x01	; 1
			
			// Reset the button press count
			if (blueButtonPressCount == MAX_COUNT) {
 29e:	88 30       	cpi	r24, 0x08	; 8
 2a0:	91 05       	cpc	r25, r1
 2a2:	29 f0       	breq	.+10     	; 0x2ae <checkBlueButton+0x42>
			
			// Set flag for button press
			blueButtonWasPressed = 1;
			
			// Increment button press count
			blueButtonPressCount++;
 2a4:	90 93 03 01 	sts	0x0103, r25
 2a8:	80 93 02 01 	sts	0x0102, r24
 2ac:	09 c0       	rjmp	.+18     	; 0x2c0 <checkBlueButton+0x54>
			
			// Reset the button press count
			if (blueButtonPressCount == MAX_COUNT) {
				blueButtonPressCount = 0;
 2ae:	10 92 03 01 	sts	0x0103, r1
 2b2:	10 92 02 01 	sts	0x0102, r1
 2b6:	04 c0       	rjmp	.+8      	; 0x2c0 <checkBlueButton+0x54>
			}
		}
	}
	// Clear flag for button press
	else {
		blueButtonWasPressed = 0;
 2b8:	10 92 01 01 	sts	0x0101, r1
 2bc:	10 92 00 01 	sts	0x0100, r1
	}
	
	return (pow(2, blueButtonPressCount) - 2);
 2c0:	60 91 02 01 	lds	r22, 0x0102
 2c4:	70 91 03 01 	lds	r23, 0x0103
 2c8:	88 27       	eor	r24, r24
 2ca:	77 fd       	sbrc	r23, 7
 2cc:	80 95       	com	r24
 2ce:	98 2f       	mov	r25, r24
 2d0:	0e 94 38 02 	call	0x470	; 0x470 <__floatsisf>
 2d4:	9b 01       	movw	r18, r22
 2d6:	ac 01       	movw	r20, r24
 2d8:	60 e0       	ldi	r22, 0x00	; 0
 2da:	70 e0       	ldi	r23, 0x00	; 0
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	90 e4       	ldi	r25, 0x40	; 64
 2e0:	0e 94 c4 02 	call	0x588	; 0x588 <pow>
 2e4:	20 e0       	ldi	r18, 0x00	; 0
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	50 e4       	ldi	r21, 0x40	; 64
 2ec:	0e 94 a0 01 	call	0x340	; 0x340 <__subsf3>
 2f0:	0e 94 05 02 	call	0x40a	; 0x40a <__fixsfsi>
}
 2f4:	cb 01       	movw	r24, r22
 2f6:	08 95       	ret

000002f8 <main>:

int main() {
	
	// Initialize BUTTON_DDR as inputs
	BUTTON_DDR &= ~(1 << RED_BUTTON);
 2f8:	38 98       	cbi	0x07, 0	; 7
	BUTTON_DDR &= ~(1 << GREEN_BUTTON);
 2fa:	39 98       	cbi	0x07, 1	; 7
	BUTTON_DDR &= ~(1 << BLUE_BUTTON);
 2fc:	3a 98       	cbi	0x07, 2	; 7
	
	// Initialize pull-up resistor on BUTTON_PORT
	BUTTON_PULL_UP |= (1 << RED_BUTTON);
 2fe:	40 9a       	sbi	0x08, 0	; 8
	BUTTON_PULL_UP |= (1 << GREEN_BUTTON);
 300:	41 9a       	sbi	0x08, 1	; 8
	BUTTON_PULL_UP |= (1 << BLUE_BUTTON);
 302:	42 9a       	sbi	0x08, 2	; 8
	
	// Set LED pins to be outputs
	LED_DDR |= (1 << RED_LED);
 304:	21 9a       	sbi	0x04, 1	; 4
	LED_DDR |= (1 << GREEN_LED);
 306:	22 9a       	sbi	0x04, 2	; 4
	LED_DDR |= (1 << BLUE_LED);
 308:	23 9a       	sbi	0x04, 3	; 4
	
	initTimers();
 30a:	0e 94 89 00 	call	0x112	; 0x112 <initTimers>
	// Loop forever
	while(1) {
		
		
		redBrightness = checkRedButton();
		OCR1A = redBrightness;
 30e:	0f 2e       	mov	r0, r31
 310:	f8 e8       	ldi	r31, 0x88	; 136
 312:	ef 2e       	mov	r14, r31
 314:	f1 2c       	mov	r15, r1
 316:	f0 2d       	mov	r31, r0
		
		greenBrightness = checkGreenButton();
		OCR1B = greenBrightness;
 318:	0a e8       	ldi	r16, 0x8A	; 138
 31a:	10 e0       	ldi	r17, 0x00	; 0
		
		blueBrightness = checkBlueButton();
		OCR2A = blueBrightness;
 31c:	c3 eb       	ldi	r28, 0xB3	; 179
 31e:	d0 e0       	ldi	r29, 0x00	; 0
	
	// Loop forever
	while(1) {
		
		
		redBrightness = checkRedButton();
 320:	0e 94 aa 00 	call	0x154	; 0x154 <checkRedButton>
 324:	99 27       	eor	r25, r25
		OCR1A = redBrightness;
 326:	f7 01       	movw	r30, r14
 328:	91 83       	std	Z+1, r25	; 0x01
 32a:	80 83       	st	Z, r24
		
		greenBrightness = checkGreenButton();
 32c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <checkGreenButton>
 330:	99 27       	eor	r25, r25
		OCR1B = greenBrightness;
 332:	f8 01       	movw	r30, r16
 334:	91 83       	std	Z+1, r25	; 0x01
 336:	80 83       	st	Z, r24
		
		blueBrightness = checkBlueButton();
 338:	0e 94 36 01 	call	0x26c	; 0x26c <checkBlueButton>
		OCR2A = blueBrightness;
 33c:	88 83       	st	Y, r24
 33e:	f0 cf       	rjmp	.-32     	; 0x320 <main+0x28>

00000340 <__subsf3>:
 340:	50 58       	subi	r21, 0x80	; 128

00000342 <__addsf3>:
 342:	bb 27       	eor	r27, r27
 344:	aa 27       	eor	r26, r26
 346:	0e d0       	rcall	.+28     	; 0x364 <__addsf3x>
 348:	e5 c0       	rjmp	.+458    	; 0x514 <__fp_round>
 34a:	d6 d0       	rcall	.+428    	; 0x4f8 <__fp_pscA>
 34c:	30 f0       	brcs	.+12     	; 0x35a <__addsf3+0x18>
 34e:	db d0       	rcall	.+438    	; 0x506 <__fp_pscB>
 350:	20 f0       	brcs	.+8      	; 0x35a <__addsf3+0x18>
 352:	31 f4       	brne	.+12     	; 0x360 <__addsf3+0x1e>
 354:	9f 3f       	cpi	r25, 0xFF	; 255
 356:	11 f4       	brne	.+4      	; 0x35c <__addsf3+0x1a>
 358:	1e f4       	brtc	.+6      	; 0x360 <__addsf3+0x1e>
 35a:	cb c0       	rjmp	.+406    	; 0x4f2 <__fp_nan>
 35c:	0e f4       	brtc	.+2      	; 0x360 <__addsf3+0x1e>
 35e:	e0 95       	com	r30
 360:	e7 fb       	bst	r30, 7
 362:	c1 c0       	rjmp	.+386    	; 0x4e6 <__fp_inf>

00000364 <__addsf3x>:
 364:	e9 2f       	mov	r30, r25
 366:	e7 d0       	rcall	.+462    	; 0x536 <__fp_split3>
 368:	80 f3       	brcs	.-32     	; 0x34a <__addsf3+0x8>
 36a:	ba 17       	cp	r27, r26
 36c:	62 07       	cpc	r22, r18
 36e:	73 07       	cpc	r23, r19
 370:	84 07       	cpc	r24, r20
 372:	95 07       	cpc	r25, r21
 374:	18 f0       	brcs	.+6      	; 0x37c <__addsf3x+0x18>
 376:	71 f4       	brne	.+28     	; 0x394 <__addsf3x+0x30>
 378:	9e f5       	brtc	.+102    	; 0x3e0 <__addsf3x+0x7c>
 37a:	ff c0       	rjmp	.+510    	; 0x57a <__fp_zero>
 37c:	0e f4       	brtc	.+2      	; 0x380 <__addsf3x+0x1c>
 37e:	e0 95       	com	r30
 380:	0b 2e       	mov	r0, r27
 382:	ba 2f       	mov	r27, r26
 384:	a0 2d       	mov	r26, r0
 386:	0b 01       	movw	r0, r22
 388:	b9 01       	movw	r22, r18
 38a:	90 01       	movw	r18, r0
 38c:	0c 01       	movw	r0, r24
 38e:	ca 01       	movw	r24, r20
 390:	a0 01       	movw	r20, r0
 392:	11 24       	eor	r1, r1
 394:	ff 27       	eor	r31, r31
 396:	59 1b       	sub	r21, r25
 398:	99 f0       	breq	.+38     	; 0x3c0 <__addsf3x+0x5c>
 39a:	59 3f       	cpi	r21, 0xF9	; 249
 39c:	50 f4       	brcc	.+20     	; 0x3b2 <__addsf3x+0x4e>
 39e:	50 3e       	cpi	r21, 0xE0	; 224
 3a0:	68 f1       	brcs	.+90     	; 0x3fc <__addsf3x+0x98>
 3a2:	1a 16       	cp	r1, r26
 3a4:	f0 40       	sbci	r31, 0x00	; 0
 3a6:	a2 2f       	mov	r26, r18
 3a8:	23 2f       	mov	r18, r19
 3aa:	34 2f       	mov	r19, r20
 3ac:	44 27       	eor	r20, r20
 3ae:	58 5f       	subi	r21, 0xF8	; 248
 3b0:	f3 cf       	rjmp	.-26     	; 0x398 <__addsf3x+0x34>
 3b2:	46 95       	lsr	r20
 3b4:	37 95       	ror	r19
 3b6:	27 95       	ror	r18
 3b8:	a7 95       	ror	r26
 3ba:	f0 40       	sbci	r31, 0x00	; 0
 3bc:	53 95       	inc	r21
 3be:	c9 f7       	brne	.-14     	; 0x3b2 <__addsf3x+0x4e>
 3c0:	7e f4       	brtc	.+30     	; 0x3e0 <__addsf3x+0x7c>
 3c2:	1f 16       	cp	r1, r31
 3c4:	ba 0b       	sbc	r27, r26
 3c6:	62 0b       	sbc	r22, r18
 3c8:	73 0b       	sbc	r23, r19
 3ca:	84 0b       	sbc	r24, r20
 3cc:	ba f0       	brmi	.+46     	; 0x3fc <__addsf3x+0x98>
 3ce:	91 50       	subi	r25, 0x01	; 1
 3d0:	a1 f0       	breq	.+40     	; 0x3fa <__addsf3x+0x96>
 3d2:	ff 0f       	add	r31, r31
 3d4:	bb 1f       	adc	r27, r27
 3d6:	66 1f       	adc	r22, r22
 3d8:	77 1f       	adc	r23, r23
 3da:	88 1f       	adc	r24, r24
 3dc:	c2 f7       	brpl	.-16     	; 0x3ce <__addsf3x+0x6a>
 3de:	0e c0       	rjmp	.+28     	; 0x3fc <__addsf3x+0x98>
 3e0:	ba 0f       	add	r27, r26
 3e2:	62 1f       	adc	r22, r18
 3e4:	73 1f       	adc	r23, r19
 3e6:	84 1f       	adc	r24, r20
 3e8:	48 f4       	brcc	.+18     	; 0x3fc <__addsf3x+0x98>
 3ea:	87 95       	ror	r24
 3ec:	77 95       	ror	r23
 3ee:	67 95       	ror	r22
 3f0:	b7 95       	ror	r27
 3f2:	f7 95       	ror	r31
 3f4:	9e 3f       	cpi	r25, 0xFE	; 254
 3f6:	08 f0       	brcs	.+2      	; 0x3fa <__addsf3x+0x96>
 3f8:	b3 cf       	rjmp	.-154    	; 0x360 <__addsf3+0x1e>
 3fa:	93 95       	inc	r25
 3fc:	88 0f       	add	r24, r24
 3fe:	08 f0       	brcs	.+2      	; 0x402 <__addsf3x+0x9e>
 400:	99 27       	eor	r25, r25
 402:	ee 0f       	add	r30, r30
 404:	97 95       	ror	r25
 406:	87 95       	ror	r24
 408:	08 95       	ret

0000040a <__fixsfsi>:
 40a:	04 d0       	rcall	.+8      	; 0x414 <__fixunssfsi>
 40c:	68 94       	set
 40e:	b1 11       	cpse	r27, r1
 410:	b5 c0       	rjmp	.+362    	; 0x57c <__fp_szero>
 412:	08 95       	ret

00000414 <__fixunssfsi>:
 414:	98 d0       	rcall	.+304    	; 0x546 <__fp_splitA>
 416:	88 f0       	brcs	.+34     	; 0x43a <__fixunssfsi+0x26>
 418:	9f 57       	subi	r25, 0x7F	; 127
 41a:	90 f0       	brcs	.+36     	; 0x440 <__fixunssfsi+0x2c>
 41c:	b9 2f       	mov	r27, r25
 41e:	99 27       	eor	r25, r25
 420:	b7 51       	subi	r27, 0x17	; 23
 422:	a0 f0       	brcs	.+40     	; 0x44c <__fixunssfsi+0x38>
 424:	d1 f0       	breq	.+52     	; 0x45a <__fixunssfsi+0x46>
 426:	66 0f       	add	r22, r22
 428:	77 1f       	adc	r23, r23
 42a:	88 1f       	adc	r24, r24
 42c:	99 1f       	adc	r25, r25
 42e:	1a f0       	brmi	.+6      	; 0x436 <__fixunssfsi+0x22>
 430:	ba 95       	dec	r27
 432:	c9 f7       	brne	.-14     	; 0x426 <__fixunssfsi+0x12>
 434:	12 c0       	rjmp	.+36     	; 0x45a <__fixunssfsi+0x46>
 436:	b1 30       	cpi	r27, 0x01	; 1
 438:	81 f0       	breq	.+32     	; 0x45a <__fixunssfsi+0x46>
 43a:	9f d0       	rcall	.+318    	; 0x57a <__fp_zero>
 43c:	b1 e0       	ldi	r27, 0x01	; 1
 43e:	08 95       	ret
 440:	9c c0       	rjmp	.+312    	; 0x57a <__fp_zero>
 442:	67 2f       	mov	r22, r23
 444:	78 2f       	mov	r23, r24
 446:	88 27       	eor	r24, r24
 448:	b8 5f       	subi	r27, 0xF8	; 248
 44a:	39 f0       	breq	.+14     	; 0x45a <__fixunssfsi+0x46>
 44c:	b9 3f       	cpi	r27, 0xF9	; 249
 44e:	cc f3       	brlt	.-14     	; 0x442 <__fixunssfsi+0x2e>
 450:	86 95       	lsr	r24
 452:	77 95       	ror	r23
 454:	67 95       	ror	r22
 456:	b3 95       	inc	r27
 458:	d9 f7       	brne	.-10     	; 0x450 <__fixunssfsi+0x3c>
 45a:	3e f4       	brtc	.+14     	; 0x46a <__fixunssfsi+0x56>
 45c:	90 95       	com	r25
 45e:	80 95       	com	r24
 460:	70 95       	com	r23
 462:	61 95       	neg	r22
 464:	7f 4f       	sbci	r23, 0xFF	; 255
 466:	8f 4f       	sbci	r24, 0xFF	; 255
 468:	9f 4f       	sbci	r25, 0xFF	; 255
 46a:	08 95       	ret

0000046c <__floatunsisf>:
 46c:	e8 94       	clt
 46e:	09 c0       	rjmp	.+18     	; 0x482 <__floatsisf+0x12>

00000470 <__floatsisf>:
 470:	97 fb       	bst	r25, 7
 472:	3e f4       	brtc	.+14     	; 0x482 <__floatsisf+0x12>
 474:	90 95       	com	r25
 476:	80 95       	com	r24
 478:	70 95       	com	r23
 47a:	61 95       	neg	r22
 47c:	7f 4f       	sbci	r23, 0xFF	; 255
 47e:	8f 4f       	sbci	r24, 0xFF	; 255
 480:	9f 4f       	sbci	r25, 0xFF	; 255
 482:	99 23       	and	r25, r25
 484:	a9 f0       	breq	.+42     	; 0x4b0 <__floatsisf+0x40>
 486:	f9 2f       	mov	r31, r25
 488:	96 e9       	ldi	r25, 0x96	; 150
 48a:	bb 27       	eor	r27, r27
 48c:	93 95       	inc	r25
 48e:	f6 95       	lsr	r31
 490:	87 95       	ror	r24
 492:	77 95       	ror	r23
 494:	67 95       	ror	r22
 496:	b7 95       	ror	r27
 498:	f1 11       	cpse	r31, r1
 49a:	f8 cf       	rjmp	.-16     	; 0x48c <__floatsisf+0x1c>
 49c:	fa f4       	brpl	.+62     	; 0x4dc <__floatsisf+0x6c>
 49e:	bb 0f       	add	r27, r27
 4a0:	11 f4       	brne	.+4      	; 0x4a6 <__floatsisf+0x36>
 4a2:	60 ff       	sbrs	r22, 0
 4a4:	1b c0       	rjmp	.+54     	; 0x4dc <__floatsisf+0x6c>
 4a6:	6f 5f       	subi	r22, 0xFF	; 255
 4a8:	7f 4f       	sbci	r23, 0xFF	; 255
 4aa:	8f 4f       	sbci	r24, 0xFF	; 255
 4ac:	9f 4f       	sbci	r25, 0xFF	; 255
 4ae:	16 c0       	rjmp	.+44     	; 0x4dc <__floatsisf+0x6c>
 4b0:	88 23       	and	r24, r24
 4b2:	11 f0       	breq	.+4      	; 0x4b8 <__floatsisf+0x48>
 4b4:	96 e9       	ldi	r25, 0x96	; 150
 4b6:	11 c0       	rjmp	.+34     	; 0x4da <__floatsisf+0x6a>
 4b8:	77 23       	and	r23, r23
 4ba:	21 f0       	breq	.+8      	; 0x4c4 <__floatsisf+0x54>
 4bc:	9e e8       	ldi	r25, 0x8E	; 142
 4be:	87 2f       	mov	r24, r23
 4c0:	76 2f       	mov	r23, r22
 4c2:	05 c0       	rjmp	.+10     	; 0x4ce <__floatsisf+0x5e>
 4c4:	66 23       	and	r22, r22
 4c6:	71 f0       	breq	.+28     	; 0x4e4 <__floatsisf+0x74>
 4c8:	96 e8       	ldi	r25, 0x86	; 134
 4ca:	86 2f       	mov	r24, r22
 4cc:	70 e0       	ldi	r23, 0x00	; 0
 4ce:	60 e0       	ldi	r22, 0x00	; 0
 4d0:	2a f0       	brmi	.+10     	; 0x4dc <__floatsisf+0x6c>
 4d2:	9a 95       	dec	r25
 4d4:	66 0f       	add	r22, r22
 4d6:	77 1f       	adc	r23, r23
 4d8:	88 1f       	adc	r24, r24
 4da:	da f7       	brpl	.-10     	; 0x4d2 <__floatsisf+0x62>
 4dc:	88 0f       	add	r24, r24
 4de:	96 95       	lsr	r25
 4e0:	87 95       	ror	r24
 4e2:	97 f9       	bld	r25, 7
 4e4:	08 95       	ret

000004e6 <__fp_inf>:
 4e6:	97 f9       	bld	r25, 7
 4e8:	9f 67       	ori	r25, 0x7F	; 127
 4ea:	80 e8       	ldi	r24, 0x80	; 128
 4ec:	70 e0       	ldi	r23, 0x00	; 0
 4ee:	60 e0       	ldi	r22, 0x00	; 0
 4f0:	08 95       	ret

000004f2 <__fp_nan>:
 4f2:	9f ef       	ldi	r25, 0xFF	; 255
 4f4:	80 ec       	ldi	r24, 0xC0	; 192
 4f6:	08 95       	ret

000004f8 <__fp_pscA>:
 4f8:	00 24       	eor	r0, r0
 4fa:	0a 94       	dec	r0
 4fc:	16 16       	cp	r1, r22
 4fe:	17 06       	cpc	r1, r23
 500:	18 06       	cpc	r1, r24
 502:	09 06       	cpc	r0, r25
 504:	08 95       	ret

00000506 <__fp_pscB>:
 506:	00 24       	eor	r0, r0
 508:	0a 94       	dec	r0
 50a:	12 16       	cp	r1, r18
 50c:	13 06       	cpc	r1, r19
 50e:	14 06       	cpc	r1, r20
 510:	05 06       	cpc	r0, r21
 512:	08 95       	ret

00000514 <__fp_round>:
 514:	09 2e       	mov	r0, r25
 516:	03 94       	inc	r0
 518:	00 0c       	add	r0, r0
 51a:	11 f4       	brne	.+4      	; 0x520 <__fp_round+0xc>
 51c:	88 23       	and	r24, r24
 51e:	52 f0       	brmi	.+20     	; 0x534 <__fp_round+0x20>
 520:	bb 0f       	add	r27, r27
 522:	40 f4       	brcc	.+16     	; 0x534 <__fp_round+0x20>
 524:	bf 2b       	or	r27, r31
 526:	11 f4       	brne	.+4      	; 0x52c <__fp_round+0x18>
 528:	60 ff       	sbrs	r22, 0
 52a:	04 c0       	rjmp	.+8      	; 0x534 <__fp_round+0x20>
 52c:	6f 5f       	subi	r22, 0xFF	; 255
 52e:	7f 4f       	sbci	r23, 0xFF	; 255
 530:	8f 4f       	sbci	r24, 0xFF	; 255
 532:	9f 4f       	sbci	r25, 0xFF	; 255
 534:	08 95       	ret

00000536 <__fp_split3>:
 536:	57 fd       	sbrc	r21, 7
 538:	90 58       	subi	r25, 0x80	; 128
 53a:	44 0f       	add	r20, r20
 53c:	55 1f       	adc	r21, r21
 53e:	59 f0       	breq	.+22     	; 0x556 <__fp_splitA+0x10>
 540:	5f 3f       	cpi	r21, 0xFF	; 255
 542:	71 f0       	breq	.+28     	; 0x560 <__fp_splitA+0x1a>
 544:	47 95       	ror	r20

00000546 <__fp_splitA>:
 546:	88 0f       	add	r24, r24
 548:	97 fb       	bst	r25, 7
 54a:	99 1f       	adc	r25, r25
 54c:	61 f0       	breq	.+24     	; 0x566 <__fp_splitA+0x20>
 54e:	9f 3f       	cpi	r25, 0xFF	; 255
 550:	79 f0       	breq	.+30     	; 0x570 <__fp_splitA+0x2a>
 552:	87 95       	ror	r24
 554:	08 95       	ret
 556:	12 16       	cp	r1, r18
 558:	13 06       	cpc	r1, r19
 55a:	14 06       	cpc	r1, r20
 55c:	55 1f       	adc	r21, r21
 55e:	f2 cf       	rjmp	.-28     	; 0x544 <__fp_split3+0xe>
 560:	46 95       	lsr	r20
 562:	f1 df       	rcall	.-30     	; 0x546 <__fp_splitA>
 564:	08 c0       	rjmp	.+16     	; 0x576 <__fp_splitA+0x30>
 566:	16 16       	cp	r1, r22
 568:	17 06       	cpc	r1, r23
 56a:	18 06       	cpc	r1, r24
 56c:	99 1f       	adc	r25, r25
 56e:	f1 cf       	rjmp	.-30     	; 0x552 <__fp_splitA+0xc>
 570:	86 95       	lsr	r24
 572:	71 05       	cpc	r23, r1
 574:	61 05       	cpc	r22, r1
 576:	08 94       	sec
 578:	08 95       	ret

0000057a <__fp_zero>:
 57a:	e8 94       	clt

0000057c <__fp_szero>:
 57c:	bb 27       	eor	r27, r27
 57e:	66 27       	eor	r22, r22
 580:	77 27       	eor	r23, r23
 582:	cb 01       	movw	r24, r22
 584:	97 f9       	bld	r25, 7
 586:	08 95       	ret

00000588 <pow>:
 588:	fa 01       	movw	r30, r20
 58a:	ee 0f       	add	r30, r30
 58c:	ff 1f       	adc	r31, r31
 58e:	30 96       	adiw	r30, 0x00	; 0
 590:	21 05       	cpc	r18, r1
 592:	31 05       	cpc	r19, r1
 594:	99 f1       	breq	.+102    	; 0x5fc <pow+0x74>
 596:	61 15       	cp	r22, r1
 598:	71 05       	cpc	r23, r1
 59a:	61 f4       	brne	.+24     	; 0x5b4 <pow+0x2c>
 59c:	80 38       	cpi	r24, 0x80	; 128
 59e:	bf e3       	ldi	r27, 0x3F	; 63
 5a0:	9b 07       	cpc	r25, r27
 5a2:	49 f1       	breq	.+82     	; 0x5f6 <pow+0x6e>
 5a4:	68 94       	set
 5a6:	90 38       	cpi	r25, 0x80	; 128
 5a8:	81 05       	cpc	r24, r1
 5aa:	61 f0       	breq	.+24     	; 0x5c4 <pow+0x3c>
 5ac:	80 38       	cpi	r24, 0x80	; 128
 5ae:	bf ef       	ldi	r27, 0xFF	; 255
 5b0:	9b 07       	cpc	r25, r27
 5b2:	41 f0       	breq	.+16     	; 0x5c4 <pow+0x3c>
 5b4:	99 23       	and	r25, r25
 5b6:	42 f5       	brpl	.+80     	; 0x608 <pow+0x80>
 5b8:	ff 3f       	cpi	r31, 0xFF	; 255
 5ba:	e1 05       	cpc	r30, r1
 5bc:	31 05       	cpc	r19, r1
 5be:	21 05       	cpc	r18, r1
 5c0:	11 f1       	breq	.+68     	; 0x606 <pow+0x7e>
 5c2:	e8 94       	clt
 5c4:	08 94       	sec
 5c6:	e7 95       	ror	r30
 5c8:	d9 01       	movw	r26, r18
 5ca:	aa 23       	and	r26, r26
 5cc:	29 f4       	brne	.+10     	; 0x5d8 <pow+0x50>
 5ce:	ab 2f       	mov	r26, r27
 5d0:	be 2f       	mov	r27, r30
 5d2:	f8 5f       	subi	r31, 0xF8	; 248
 5d4:	d0 f3       	brcs	.-12     	; 0x5ca <pow+0x42>
 5d6:	10 c0       	rjmp	.+32     	; 0x5f8 <pow+0x70>
 5d8:	ff 5f       	subi	r31, 0xFF	; 255
 5da:	70 f4       	brcc	.+28     	; 0x5f8 <pow+0x70>
 5dc:	a6 95       	lsr	r26
 5de:	e0 f7       	brcc	.-8      	; 0x5d8 <pow+0x50>
 5e0:	f7 39       	cpi	r31, 0x97	; 151
 5e2:	50 f0       	brcs	.+20     	; 0x5f8 <pow+0x70>
 5e4:	19 f0       	breq	.+6      	; 0x5ec <pow+0x64>
 5e6:	ff 3a       	cpi	r31, 0xAF	; 175
 5e8:	38 f4       	brcc	.+14     	; 0x5f8 <pow+0x70>
 5ea:	9f 77       	andi	r25, 0x7F	; 127
 5ec:	9f 93       	push	r25
 5ee:	0c d0       	rcall	.+24     	; 0x608 <pow+0x80>
 5f0:	0f 90       	pop	r0
 5f2:	07 fc       	sbrc	r0, 7
 5f4:	90 58       	subi	r25, 0x80	; 128
 5f6:	08 95       	ret
 5f8:	3e f0       	brts	.+14     	; 0x608 <pow+0x80>
 5fa:	7b cf       	rjmp	.-266    	; 0x4f2 <__fp_nan>
 5fc:	60 e0       	ldi	r22, 0x00	; 0
 5fe:	70 e0       	ldi	r23, 0x00	; 0
 600:	80 e8       	ldi	r24, 0x80	; 128
 602:	9f e3       	ldi	r25, 0x3F	; 63
 604:	08 95       	ret
 606:	4f e7       	ldi	r20, 0x7F	; 127
 608:	9f 77       	andi	r25, 0x7F	; 127
 60a:	5f 93       	push	r21
 60c:	4f 93       	push	r20
 60e:	3f 93       	push	r19
 610:	2f 93       	push	r18
 612:	9e d0       	rcall	.+316    	; 0x750 <log>
 614:	2f 91       	pop	r18
 616:	3f 91       	pop	r19
 618:	4f 91       	pop	r20
 61a:	5f 91       	pop	r21
 61c:	0c d1       	rcall	.+536    	; 0x836 <__mulsf3>
 61e:	05 c0       	rjmp	.+10     	; 0x62a <exp>
 620:	19 f4       	brne	.+6      	; 0x628 <pow+0xa0>
 622:	0e f0       	brts	.+2      	; 0x626 <pow+0x9e>
 624:	60 cf       	rjmp	.-320    	; 0x4e6 <__fp_inf>
 626:	a9 cf       	rjmp	.-174    	; 0x57a <__fp_zero>
 628:	64 cf       	rjmp	.-312    	; 0x4f2 <__fp_nan>

0000062a <exp>:
 62a:	8d df       	rcall	.-230    	; 0x546 <__fp_splitA>
 62c:	c8 f3       	brcs	.-14     	; 0x620 <pow+0x98>
 62e:	96 38       	cpi	r25, 0x86	; 134
 630:	c0 f7       	brcc	.-16     	; 0x622 <pow+0x9a>
 632:	07 f8       	bld	r0, 7
 634:	0f 92       	push	r0
 636:	e8 94       	clt
 638:	2b e3       	ldi	r18, 0x3B	; 59
 63a:	3a ea       	ldi	r19, 0xAA	; 170
 63c:	48 eb       	ldi	r20, 0xB8	; 184
 63e:	5f e7       	ldi	r21, 0x7F	; 127
 640:	08 d1       	rcall	.+528    	; 0x852 <__mulsf3_pse>
 642:	0f 92       	push	r0
 644:	0f 92       	push	r0
 646:	0f 92       	push	r0
 648:	4d b7       	in	r20, 0x3d	; 61
 64a:	5e b7       	in	r21, 0x3e	; 62
 64c:	0f 92       	push	r0
 64e:	c0 d0       	rcall	.+384    	; 0x7d0 <modf>
 650:	e8 e6       	ldi	r30, 0x68	; 104
 652:	f0 e0       	ldi	r31, 0x00	; 0
 654:	16 d0       	rcall	.+44     	; 0x682 <__fp_powser>
 656:	4f 91       	pop	r20
 658:	5f 91       	pop	r21
 65a:	ef 91       	pop	r30
 65c:	ff 91       	pop	r31
 65e:	e5 95       	asr	r30
 660:	ee 1f       	adc	r30, r30
 662:	ff 1f       	adc	r31, r31
 664:	49 f0       	breq	.+18     	; 0x678 <exp+0x4e>
 666:	fe 57       	subi	r31, 0x7E	; 126
 668:	e0 68       	ori	r30, 0x80	; 128
 66a:	44 27       	eor	r20, r20
 66c:	ee 0f       	add	r30, r30
 66e:	44 1f       	adc	r20, r20
 670:	fa 95       	dec	r31
 672:	e1 f7       	brne	.-8      	; 0x66c <exp+0x42>
 674:	41 95       	neg	r20
 676:	55 0b       	sbc	r21, r21
 678:	32 d0       	rcall	.+100    	; 0x6de <ldexp>
 67a:	0f 90       	pop	r0
 67c:	07 fe       	sbrs	r0, 7
 67e:	26 c0       	rjmp	.+76     	; 0x6cc <inverse>
 680:	08 95       	ret

00000682 <__fp_powser>:
 682:	df 93       	push	r29
 684:	cf 93       	push	r28
 686:	1f 93       	push	r17
 688:	0f 93       	push	r16
 68a:	ff 92       	push	r15
 68c:	ef 92       	push	r14
 68e:	df 92       	push	r13
 690:	7b 01       	movw	r14, r22
 692:	8c 01       	movw	r16, r24
 694:	68 94       	set
 696:	05 c0       	rjmp	.+10     	; 0x6a2 <__fp_powser+0x20>
 698:	da 2e       	mov	r13, r26
 69a:	ef 01       	movw	r28, r30
 69c:	d8 d0       	rcall	.+432    	; 0x84e <__mulsf3x>
 69e:	fe 01       	movw	r30, r28
 6a0:	e8 94       	clt
 6a2:	a5 91       	lpm	r26, Z+
 6a4:	25 91       	lpm	r18, Z+
 6a6:	35 91       	lpm	r19, Z+
 6a8:	45 91       	lpm	r20, Z+
 6aa:	55 91       	lpm	r21, Z+
 6ac:	ae f3       	brts	.-22     	; 0x698 <__fp_powser+0x16>
 6ae:	ef 01       	movw	r28, r30
 6b0:	59 de       	rcall	.-846    	; 0x364 <__addsf3x>
 6b2:	fe 01       	movw	r30, r28
 6b4:	97 01       	movw	r18, r14
 6b6:	a8 01       	movw	r20, r16
 6b8:	da 94       	dec	r13
 6ba:	79 f7       	brne	.-34     	; 0x69a <__fp_powser+0x18>
 6bc:	df 90       	pop	r13
 6be:	ef 90       	pop	r14
 6c0:	ff 90       	pop	r15
 6c2:	0f 91       	pop	r16
 6c4:	1f 91       	pop	r17
 6c6:	cf 91       	pop	r28
 6c8:	df 91       	pop	r29
 6ca:	08 95       	ret

000006cc <inverse>:
 6cc:	9b 01       	movw	r18, r22
 6ce:	ac 01       	movw	r20, r24
 6d0:	60 e0       	ldi	r22, 0x00	; 0
 6d2:	70 e0       	ldi	r23, 0x00	; 0
 6d4:	80 e8       	ldi	r24, 0x80	; 128
 6d6:	9f e3       	ldi	r25, 0x3F	; 63
 6d8:	11 c1       	rjmp	.+546    	; 0x8fc <__divsf3>
 6da:	05 cf       	rjmp	.-502    	; 0x4e6 <__fp_inf>
 6dc:	77 c1       	rjmp	.+750    	; 0x9cc <__fp_mpack>

000006de <ldexp>:
 6de:	33 df       	rcall	.-410    	; 0x546 <__fp_splitA>
 6e0:	e8 f3       	brcs	.-6      	; 0x6dc <inverse+0x10>
 6e2:	99 23       	and	r25, r25
 6e4:	d9 f3       	breq	.-10     	; 0x6dc <inverse+0x10>
 6e6:	94 0f       	add	r25, r20
 6e8:	51 1d       	adc	r21, r1
 6ea:	bb f3       	brvs	.-18     	; 0x6da <inverse+0xe>
 6ec:	91 50       	subi	r25, 0x01	; 1
 6ee:	50 40       	sbci	r21, 0x00	; 0
 6f0:	94 f0       	brlt	.+36     	; 0x716 <ldexp+0x38>
 6f2:	59 f0       	breq	.+22     	; 0x70a <ldexp+0x2c>
 6f4:	88 23       	and	r24, r24
 6f6:	32 f0       	brmi	.+12     	; 0x704 <ldexp+0x26>
 6f8:	66 0f       	add	r22, r22
 6fa:	77 1f       	adc	r23, r23
 6fc:	88 1f       	adc	r24, r24
 6fe:	91 50       	subi	r25, 0x01	; 1
 700:	50 40       	sbci	r21, 0x00	; 0
 702:	c1 f7       	brne	.-16     	; 0x6f4 <ldexp+0x16>
 704:	9e 3f       	cpi	r25, 0xFE	; 254
 706:	51 05       	cpc	r21, r1
 708:	44 f7       	brge	.-48     	; 0x6da <inverse+0xe>
 70a:	88 0f       	add	r24, r24
 70c:	91 1d       	adc	r25, r1
 70e:	96 95       	lsr	r25
 710:	87 95       	ror	r24
 712:	97 f9       	bld	r25, 7
 714:	08 95       	ret
 716:	5f 3f       	cpi	r21, 0xFF	; 255
 718:	ac f0       	brlt	.+42     	; 0x744 <ldexp+0x66>
 71a:	98 3e       	cpi	r25, 0xE8	; 232
 71c:	9c f0       	brlt	.+38     	; 0x744 <ldexp+0x66>
 71e:	bb 27       	eor	r27, r27
 720:	86 95       	lsr	r24
 722:	77 95       	ror	r23
 724:	67 95       	ror	r22
 726:	b7 95       	ror	r27
 728:	08 f4       	brcc	.+2      	; 0x72c <ldexp+0x4e>
 72a:	b1 60       	ori	r27, 0x01	; 1
 72c:	93 95       	inc	r25
 72e:	c1 f7       	brne	.-16     	; 0x720 <ldexp+0x42>
 730:	bb 0f       	add	r27, r27
 732:	58 f7       	brcc	.-42     	; 0x70a <ldexp+0x2c>
 734:	11 f4       	brne	.+4      	; 0x73a <ldexp+0x5c>
 736:	60 ff       	sbrs	r22, 0
 738:	e8 cf       	rjmp	.-48     	; 0x70a <ldexp+0x2c>
 73a:	6f 5f       	subi	r22, 0xFF	; 255
 73c:	7f 4f       	sbci	r23, 0xFF	; 255
 73e:	8f 4f       	sbci	r24, 0xFF	; 255
 740:	9f 4f       	sbci	r25, 0xFF	; 255
 742:	e3 cf       	rjmp	.-58     	; 0x70a <ldexp+0x2c>
 744:	1b cf       	rjmp	.-458    	; 0x57c <__fp_szero>
 746:	0e f0       	brts	.+2      	; 0x74a <ldexp+0x6c>
 748:	41 c1       	rjmp	.+642    	; 0x9cc <__fp_mpack>
 74a:	d3 ce       	rjmp	.-602    	; 0x4f2 <__fp_nan>
 74c:	68 94       	set
 74e:	cb ce       	rjmp	.-618    	; 0x4e6 <__fp_inf>

00000750 <log>:
 750:	fa de       	rcall	.-524    	; 0x546 <__fp_splitA>
 752:	c8 f3       	brcs	.-14     	; 0x746 <ldexp+0x68>
 754:	99 23       	and	r25, r25
 756:	d1 f3       	breq	.-12     	; 0x74c <ldexp+0x6e>
 758:	c6 f3       	brts	.-16     	; 0x74a <ldexp+0x6c>
 75a:	df 93       	push	r29
 75c:	cf 93       	push	r28
 75e:	1f 93       	push	r17
 760:	0f 93       	push	r16
 762:	ff 92       	push	r15
 764:	c9 2f       	mov	r28, r25
 766:	dd 27       	eor	r29, r29
 768:	88 23       	and	r24, r24
 76a:	2a f0       	brmi	.+10     	; 0x776 <log+0x26>
 76c:	21 97       	sbiw	r28, 0x01	; 1
 76e:	66 0f       	add	r22, r22
 770:	77 1f       	adc	r23, r23
 772:	88 1f       	adc	r24, r24
 774:	da f7       	brpl	.-10     	; 0x76c <log+0x1c>
 776:	20 e0       	ldi	r18, 0x00	; 0
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	40 e8       	ldi	r20, 0x80	; 128
 77c:	5f eb       	ldi	r21, 0xBF	; 191
 77e:	9f e3       	ldi	r25, 0x3F	; 63
 780:	88 39       	cpi	r24, 0x98	; 152
 782:	20 f0       	brcs	.+8      	; 0x78c <log+0x3c>
 784:	80 3e       	cpi	r24, 0xE0	; 224
 786:	30 f0       	brcs	.+12     	; 0x794 <log+0x44>
 788:	21 96       	adiw	r28, 0x01	; 1
 78a:	8f 77       	andi	r24, 0x7F	; 127
 78c:	da dd       	rcall	.-1100   	; 0x342 <__addsf3>
 78e:	e0 e9       	ldi	r30, 0x90	; 144
 790:	f0 e0       	ldi	r31, 0x00	; 0
 792:	03 c0       	rjmp	.+6      	; 0x79a <log+0x4a>
 794:	d6 dd       	rcall	.-1108   	; 0x342 <__addsf3>
 796:	ed eb       	ldi	r30, 0xBD	; 189
 798:	f0 e0       	ldi	r31, 0x00	; 0
 79a:	73 df       	rcall	.-282    	; 0x682 <__fp_powser>
 79c:	8b 01       	movw	r16, r22
 79e:	be 01       	movw	r22, r28
 7a0:	ec 01       	movw	r28, r24
 7a2:	fb 2e       	mov	r15, r27
 7a4:	6f 57       	subi	r22, 0x7F	; 127
 7a6:	71 09       	sbc	r23, r1
 7a8:	75 95       	asr	r23
 7aa:	77 1f       	adc	r23, r23
 7ac:	88 0b       	sbc	r24, r24
 7ae:	99 0b       	sbc	r25, r25
 7b0:	5f de       	rcall	.-834    	; 0x470 <__floatsisf>
 7b2:	28 e1       	ldi	r18, 0x18	; 24
 7b4:	32 e7       	ldi	r19, 0x72	; 114
 7b6:	41 e3       	ldi	r20, 0x31	; 49
 7b8:	5f e3       	ldi	r21, 0x3F	; 63
 7ba:	49 d0       	rcall	.+146    	; 0x84e <__mulsf3x>
 7bc:	af 2d       	mov	r26, r15
 7be:	98 01       	movw	r18, r16
 7c0:	ae 01       	movw	r20, r28
 7c2:	ff 90       	pop	r15
 7c4:	0f 91       	pop	r16
 7c6:	1f 91       	pop	r17
 7c8:	cf 91       	pop	r28
 7ca:	df 91       	pop	r29
 7cc:	cb dd       	rcall	.-1130   	; 0x364 <__addsf3x>
 7ce:	a2 ce       	rjmp	.-700    	; 0x514 <__fp_round>

000007d0 <modf>:
 7d0:	fa 01       	movw	r30, r20
 7d2:	dc 01       	movw	r26, r24
 7d4:	aa 0f       	add	r26, r26
 7d6:	bb 1f       	adc	r27, r27
 7d8:	9b 01       	movw	r18, r22
 7da:	ac 01       	movw	r20, r24
 7dc:	bf 57       	subi	r27, 0x7F	; 127
 7de:	28 f4       	brcc	.+10     	; 0x7ea <modf+0x1a>
 7e0:	22 27       	eor	r18, r18
 7e2:	33 27       	eor	r19, r19
 7e4:	44 27       	eor	r20, r20
 7e6:	50 78       	andi	r21, 0x80	; 128
 7e8:	1f c0       	rjmp	.+62     	; 0x828 <modf+0x58>
 7ea:	b7 51       	subi	r27, 0x17	; 23
 7ec:	88 f4       	brcc	.+34     	; 0x810 <modf+0x40>
 7ee:	ab 2f       	mov	r26, r27
 7f0:	00 24       	eor	r0, r0
 7f2:	46 95       	lsr	r20
 7f4:	37 95       	ror	r19
 7f6:	27 95       	ror	r18
 7f8:	01 1c       	adc	r0, r1
 7fa:	a3 95       	inc	r26
 7fc:	d2 f3       	brmi	.-12     	; 0x7f2 <modf+0x22>
 7fe:	00 20       	and	r0, r0
 800:	69 f0       	breq	.+26     	; 0x81c <modf+0x4c>
 802:	22 0f       	add	r18, r18
 804:	33 1f       	adc	r19, r19
 806:	44 1f       	adc	r20, r20
 808:	b3 95       	inc	r27
 80a:	da f3       	brmi	.-10     	; 0x802 <modf+0x32>
 80c:	0d d0       	rcall	.+26     	; 0x828 <modf+0x58>
 80e:	98 cd       	rjmp	.-1232   	; 0x340 <__subsf3>
 810:	61 30       	cpi	r22, 0x01	; 1
 812:	71 05       	cpc	r23, r1
 814:	a0 e8       	ldi	r26, 0x80	; 128
 816:	8a 07       	cpc	r24, r26
 818:	b9 46       	sbci	r27, 0x69	; 105
 81a:	30 f4       	brcc	.+12     	; 0x828 <modf+0x58>
 81c:	9b 01       	movw	r18, r22
 81e:	ac 01       	movw	r20, r24
 820:	66 27       	eor	r22, r22
 822:	77 27       	eor	r23, r23
 824:	88 27       	eor	r24, r24
 826:	90 78       	andi	r25, 0x80	; 128
 828:	30 96       	adiw	r30, 0x00	; 0
 82a:	21 f0       	breq	.+8      	; 0x834 <modf+0x64>
 82c:	20 83       	st	Z, r18
 82e:	31 83       	std	Z+1, r19	; 0x01
 830:	42 83       	std	Z+2, r20	; 0x02
 832:	53 83       	std	Z+3, r21	; 0x03
 834:	08 95       	ret

00000836 <__mulsf3>:
 836:	0b d0       	rcall	.+22     	; 0x84e <__mulsf3x>
 838:	6d ce       	rjmp	.-806    	; 0x514 <__fp_round>
 83a:	5e de       	rcall	.-836    	; 0x4f8 <__fp_pscA>
 83c:	28 f0       	brcs	.+10     	; 0x848 <__mulsf3+0x12>
 83e:	63 de       	rcall	.-826    	; 0x506 <__fp_pscB>
 840:	18 f0       	brcs	.+6      	; 0x848 <__mulsf3+0x12>
 842:	95 23       	and	r25, r21
 844:	09 f0       	breq	.+2      	; 0x848 <__mulsf3+0x12>
 846:	4f ce       	rjmp	.-866    	; 0x4e6 <__fp_inf>
 848:	54 ce       	rjmp	.-856    	; 0x4f2 <__fp_nan>
 84a:	11 24       	eor	r1, r1
 84c:	97 ce       	rjmp	.-722    	; 0x57c <__fp_szero>

0000084e <__mulsf3x>:
 84e:	73 de       	rcall	.-794    	; 0x536 <__fp_split3>
 850:	a0 f3       	brcs	.-24     	; 0x83a <__mulsf3+0x4>

00000852 <__mulsf3_pse>:
 852:	95 9f       	mul	r25, r21
 854:	d1 f3       	breq	.-12     	; 0x84a <__mulsf3+0x14>
 856:	95 0f       	add	r25, r21
 858:	50 e0       	ldi	r21, 0x00	; 0
 85a:	55 1f       	adc	r21, r21
 85c:	62 9f       	mul	r22, r18
 85e:	f0 01       	movw	r30, r0
 860:	72 9f       	mul	r23, r18
 862:	bb 27       	eor	r27, r27
 864:	f0 0d       	add	r31, r0
 866:	b1 1d       	adc	r27, r1
 868:	63 9f       	mul	r22, r19
 86a:	aa 27       	eor	r26, r26
 86c:	f0 0d       	add	r31, r0
 86e:	b1 1d       	adc	r27, r1
 870:	aa 1f       	adc	r26, r26
 872:	64 9f       	mul	r22, r20
 874:	66 27       	eor	r22, r22
 876:	b0 0d       	add	r27, r0
 878:	a1 1d       	adc	r26, r1
 87a:	66 1f       	adc	r22, r22
 87c:	82 9f       	mul	r24, r18
 87e:	22 27       	eor	r18, r18
 880:	b0 0d       	add	r27, r0
 882:	a1 1d       	adc	r26, r1
 884:	62 1f       	adc	r22, r18
 886:	73 9f       	mul	r23, r19
 888:	b0 0d       	add	r27, r0
 88a:	a1 1d       	adc	r26, r1
 88c:	62 1f       	adc	r22, r18
 88e:	83 9f       	mul	r24, r19
 890:	a0 0d       	add	r26, r0
 892:	61 1d       	adc	r22, r1
 894:	22 1f       	adc	r18, r18
 896:	74 9f       	mul	r23, r20
 898:	33 27       	eor	r19, r19
 89a:	a0 0d       	add	r26, r0
 89c:	61 1d       	adc	r22, r1
 89e:	23 1f       	adc	r18, r19
 8a0:	84 9f       	mul	r24, r20
 8a2:	60 0d       	add	r22, r0
 8a4:	21 1d       	adc	r18, r1
 8a6:	82 2f       	mov	r24, r18
 8a8:	76 2f       	mov	r23, r22
 8aa:	6a 2f       	mov	r22, r26
 8ac:	11 24       	eor	r1, r1
 8ae:	9f 57       	subi	r25, 0x7F	; 127
 8b0:	50 40       	sbci	r21, 0x00	; 0
 8b2:	8a f0       	brmi	.+34     	; 0x8d6 <__mulsf3_pse+0x84>
 8b4:	e1 f0       	breq	.+56     	; 0x8ee <__mulsf3_pse+0x9c>
 8b6:	88 23       	and	r24, r24
 8b8:	4a f0       	brmi	.+18     	; 0x8cc <__mulsf3_pse+0x7a>
 8ba:	ee 0f       	add	r30, r30
 8bc:	ff 1f       	adc	r31, r31
 8be:	bb 1f       	adc	r27, r27
 8c0:	66 1f       	adc	r22, r22
 8c2:	77 1f       	adc	r23, r23
 8c4:	88 1f       	adc	r24, r24
 8c6:	91 50       	subi	r25, 0x01	; 1
 8c8:	50 40       	sbci	r21, 0x00	; 0
 8ca:	a9 f7       	brne	.-22     	; 0x8b6 <__mulsf3_pse+0x64>
 8cc:	9e 3f       	cpi	r25, 0xFE	; 254
 8ce:	51 05       	cpc	r21, r1
 8d0:	70 f0       	brcs	.+28     	; 0x8ee <__mulsf3_pse+0x9c>
 8d2:	09 ce       	rjmp	.-1006   	; 0x4e6 <__fp_inf>
 8d4:	53 ce       	rjmp	.-858    	; 0x57c <__fp_szero>
 8d6:	5f 3f       	cpi	r21, 0xFF	; 255
 8d8:	ec f3       	brlt	.-6      	; 0x8d4 <__mulsf3_pse+0x82>
 8da:	98 3e       	cpi	r25, 0xE8	; 232
 8dc:	dc f3       	brlt	.-10     	; 0x8d4 <__mulsf3_pse+0x82>
 8de:	86 95       	lsr	r24
 8e0:	77 95       	ror	r23
 8e2:	67 95       	ror	r22
 8e4:	b7 95       	ror	r27
 8e6:	f7 95       	ror	r31
 8e8:	e7 95       	ror	r30
 8ea:	9f 5f       	subi	r25, 0xFF	; 255
 8ec:	c1 f7       	brne	.-16     	; 0x8de <__mulsf3_pse+0x8c>
 8ee:	fe 2b       	or	r31, r30
 8f0:	88 0f       	add	r24, r24
 8f2:	91 1d       	adc	r25, r1
 8f4:	96 95       	lsr	r25
 8f6:	87 95       	ror	r24
 8f8:	97 f9       	bld	r25, 7
 8fa:	08 95       	ret

000008fc <__divsf3>:
 8fc:	0c d0       	rcall	.+24     	; 0x916 <__divsf3x>
 8fe:	0a ce       	rjmp	.-1004   	; 0x514 <__fp_round>
 900:	02 de       	rcall	.-1020   	; 0x506 <__fp_pscB>
 902:	40 f0       	brcs	.+16     	; 0x914 <__stack+0x15>
 904:	f9 dd       	rcall	.-1038   	; 0x4f8 <__fp_pscA>
 906:	30 f0       	brcs	.+12     	; 0x914 <__stack+0x15>
 908:	21 f4       	brne	.+8      	; 0x912 <__stack+0x13>
 90a:	5f 3f       	cpi	r21, 0xFF	; 255
 90c:	19 f0       	breq	.+6      	; 0x914 <__stack+0x15>
 90e:	eb cd       	rjmp	.-1066   	; 0x4e6 <__fp_inf>
 910:	51 11       	cpse	r21, r1
 912:	34 ce       	rjmp	.-920    	; 0x57c <__fp_szero>
 914:	ee cd       	rjmp	.-1060   	; 0x4f2 <__fp_nan>

00000916 <__divsf3x>:
 916:	0f de       	rcall	.-994    	; 0x536 <__fp_split3>
 918:	98 f3       	brcs	.-26     	; 0x900 <__stack+0x1>

0000091a <__divsf3_pse>:
 91a:	99 23       	and	r25, r25
 91c:	c9 f3       	breq	.-14     	; 0x910 <__stack+0x11>
 91e:	55 23       	and	r21, r21
 920:	b1 f3       	breq	.-20     	; 0x90e <__stack+0xf>
 922:	95 1b       	sub	r25, r21
 924:	55 0b       	sbc	r21, r21
 926:	bb 27       	eor	r27, r27
 928:	aa 27       	eor	r26, r26
 92a:	62 17       	cp	r22, r18
 92c:	73 07       	cpc	r23, r19
 92e:	84 07       	cpc	r24, r20
 930:	38 f0       	brcs	.+14     	; 0x940 <__divsf3_pse+0x26>
 932:	9f 5f       	subi	r25, 0xFF	; 255
 934:	5f 4f       	sbci	r21, 0xFF	; 255
 936:	22 0f       	add	r18, r18
 938:	33 1f       	adc	r19, r19
 93a:	44 1f       	adc	r20, r20
 93c:	aa 1f       	adc	r26, r26
 93e:	a9 f3       	breq	.-22     	; 0x92a <__divsf3_pse+0x10>
 940:	33 d0       	rcall	.+102    	; 0x9a8 <__divsf3_pse+0x8e>
 942:	0e 2e       	mov	r0, r30
 944:	3a f0       	brmi	.+14     	; 0x954 <__divsf3_pse+0x3a>
 946:	e0 e8       	ldi	r30, 0x80	; 128
 948:	30 d0       	rcall	.+96     	; 0x9aa <__divsf3_pse+0x90>
 94a:	91 50       	subi	r25, 0x01	; 1
 94c:	50 40       	sbci	r21, 0x00	; 0
 94e:	e6 95       	lsr	r30
 950:	00 1c       	adc	r0, r0
 952:	ca f7       	brpl	.-14     	; 0x946 <__divsf3_pse+0x2c>
 954:	29 d0       	rcall	.+82     	; 0x9a8 <__divsf3_pse+0x8e>
 956:	fe 2f       	mov	r31, r30
 958:	27 d0       	rcall	.+78     	; 0x9a8 <__divsf3_pse+0x8e>
 95a:	66 0f       	add	r22, r22
 95c:	77 1f       	adc	r23, r23
 95e:	88 1f       	adc	r24, r24
 960:	bb 1f       	adc	r27, r27
 962:	26 17       	cp	r18, r22
 964:	37 07       	cpc	r19, r23
 966:	48 07       	cpc	r20, r24
 968:	ab 07       	cpc	r26, r27
 96a:	b0 e8       	ldi	r27, 0x80	; 128
 96c:	09 f0       	breq	.+2      	; 0x970 <__divsf3_pse+0x56>
 96e:	bb 0b       	sbc	r27, r27
 970:	80 2d       	mov	r24, r0
 972:	bf 01       	movw	r22, r30
 974:	ff 27       	eor	r31, r31
 976:	93 58       	subi	r25, 0x83	; 131
 978:	5f 4f       	sbci	r21, 0xFF	; 255
 97a:	2a f0       	brmi	.+10     	; 0x986 <__divsf3_pse+0x6c>
 97c:	9e 3f       	cpi	r25, 0xFE	; 254
 97e:	51 05       	cpc	r21, r1
 980:	68 f0       	brcs	.+26     	; 0x99c <__divsf3_pse+0x82>
 982:	b1 cd       	rjmp	.-1182   	; 0x4e6 <__fp_inf>
 984:	fb cd       	rjmp	.-1034   	; 0x57c <__fp_szero>
 986:	5f 3f       	cpi	r21, 0xFF	; 255
 988:	ec f3       	brlt	.-6      	; 0x984 <__divsf3_pse+0x6a>
 98a:	98 3e       	cpi	r25, 0xE8	; 232
 98c:	dc f3       	brlt	.-10     	; 0x984 <__divsf3_pse+0x6a>
 98e:	86 95       	lsr	r24
 990:	77 95       	ror	r23
 992:	67 95       	ror	r22
 994:	b7 95       	ror	r27
 996:	f7 95       	ror	r31
 998:	9f 5f       	subi	r25, 0xFF	; 255
 99a:	c9 f7       	brne	.-14     	; 0x98e <__divsf3_pse+0x74>
 99c:	88 0f       	add	r24, r24
 99e:	91 1d       	adc	r25, r1
 9a0:	96 95       	lsr	r25
 9a2:	87 95       	ror	r24
 9a4:	97 f9       	bld	r25, 7
 9a6:	08 95       	ret
 9a8:	e1 e0       	ldi	r30, 0x01	; 1
 9aa:	66 0f       	add	r22, r22
 9ac:	77 1f       	adc	r23, r23
 9ae:	88 1f       	adc	r24, r24
 9b0:	bb 1f       	adc	r27, r27
 9b2:	62 17       	cp	r22, r18
 9b4:	73 07       	cpc	r23, r19
 9b6:	84 07       	cpc	r24, r20
 9b8:	ba 07       	cpc	r27, r26
 9ba:	20 f0       	brcs	.+8      	; 0x9c4 <__divsf3_pse+0xaa>
 9bc:	62 1b       	sub	r22, r18
 9be:	73 0b       	sbc	r23, r19
 9c0:	84 0b       	sbc	r24, r20
 9c2:	ba 0b       	sbc	r27, r26
 9c4:	ee 1f       	adc	r30, r30
 9c6:	88 f7       	brcc	.-30     	; 0x9aa <__divsf3_pse+0x90>
 9c8:	e0 95       	com	r30
 9ca:	08 95       	ret

000009cc <__fp_mpack>:
 9cc:	9f 3f       	cpi	r25, 0xFF	; 255
 9ce:	31 f0       	breq	.+12     	; 0x9dc <__fp_mpack_finite+0xc>

000009d0 <__fp_mpack_finite>:
 9d0:	91 50       	subi	r25, 0x01	; 1
 9d2:	20 f4       	brcc	.+8      	; 0x9dc <__fp_mpack_finite+0xc>
 9d4:	87 95       	ror	r24
 9d6:	77 95       	ror	r23
 9d8:	67 95       	ror	r22
 9da:	b7 95       	ror	r27
 9dc:	88 0f       	add	r24, r24
 9de:	91 1d       	adc	r25, r1
 9e0:	96 95       	lsr	r25
 9e2:	87 95       	ror	r24
 9e4:	97 f9       	bld	r25, 7
 9e6:	08 95       	ret

000009e8 <_exit>:
 9e8:	f8 94       	cli

000009ea <__stop_program>:
 9ea:	ff cf       	rjmp	.-2      	; 0x9ea <__stop_program>
